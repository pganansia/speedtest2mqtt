name: Verify, Build and Push Image to Docker

on:
  workflow_dispatch:
  release:
    types:
      - published
      
jobs:
  anchore-build-scan:
    runs-on: ubuntu-latest
    permissions:
        actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
        contents: read # for actions/checkout to fetch code
        id-token: write
        security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    steps:
      - name: Check out the code
        uses: actions/checkout@v4.2.2
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag localbuild/testimage:latest --build-arg TARGETARCH=amd64
      - name: Run the Anchore Grype scan action
        uses: anchore/scan-action@v6.1.0
        id: scan
        with:
          image: "localbuild/testimage:latest"
          fail-build: false
          output-format: sarif
          severity-cutoff: medium
          cache-db: true
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3.28.10
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
  multi-arch-build:
    runs-on: ubuntu-latest
    needs: anchore-build-scan
    steps:
      - name: Get branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV
      - name: Debug branch-tag
        shell: bash
        run: echo ${{ env.BRANCH_NAME }}
      - name: Set docker tag for main branch
        if: ${{ env.BRANCH_NAME == 'main' }}
        shell: bash
        run: echo "DOCKERTAG=latest" >> $GITHUB_ENV
      - name: Set docker tag for github tags
        if: ${{ env.BRANCH_NAME != 'main' }}
        shell: bash
        run: echo "DOCKERTAG=$(echo "${{ env.BRANCH_NAME }}" | sed 's/refs-tags-v//')" >> $GITHUB_ENV
      - name: Debug branch-tag
        shell: bash
        run: echo $GITHUB_ENV
      - name: Debug docker tag
        run: echo ${{ env.DOCKERTAG }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0
      - name: Login to DockerHub
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v6.16.0
        id: docker_build
        with:
          platforms: linux/arm/v7,linux/arm64,linux/amd64
          push: true
          tags: pganansia/speedtest2mqtt:${{ env.DOCKERTAG }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
